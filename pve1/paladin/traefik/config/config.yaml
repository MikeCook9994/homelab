http:
  routers:
    proxmox:
      entrypoints:
        - 'https'
      rule: 'Host(`proxmox.local.michaelcook.dev`)'
      middlewares:
        - 'default-headers'
        - 'https-redirect'
      tls: {}
      service: 'proxmox'
    pihole-primary:
      entrypoints:
        - 'https'
      rule: 'Host(`pihole-primary.local.michaelcook.dev`)'
      middlewares:
        - 'pihole-redirectregex'
        - 'default-headers'
        - 'pihole-addprefix'
        - 'https-redirect'
      tls: {}
      service: 'pihole-primary'
    pihole-secondary:
      entrypoints:
        - 'https'
      rule: 'Host(`pihole-secondary.local.michaelcook.dev`)'
      middlewares:
        - 'pihole-redirectregex'
        - 'default-headers'
        - 'pihole-addprefix'
        - 'https-redirect'
      tls: {}
      service: 'pihole-secondary'
    portainer:
      entrypoints:
        - 'https'
      rule: 'Host(`portainer.local.michaelcook.dev`)'
      middlewares:
        - 'default-headers'
        - 'https-redirect'
      tls: {}
      service: 'portainer'
    foundry:
      entrypoints:
        - 'https'
      rule: 'Host(`foundry.local.michaelcook.dev`)'
      middlewares:
        - 'default-headers'
        - 'https-redirect'
      tls: {}
      service: 'foundry'
    foundry-external:
      entrypoints:
        - 'https'
      rule: 'Host(`foundry.michaelcook.dev`)'
      middlewares:
        - 'authentik-external'
        - 'default-headers'
        - 'https-redirect'
      tls: {}
      service: 'foundry'
    foundry-external-auth:
      entrypoints:
        - 'https'
      rule: 'Host(`foundry.michaelcook.dev`) && PathPrefix(`/outpost.goauthentik.io/`)'
      middlewares:
        - 'default-headers'
        - 'https-redirect'
      tls: {}
      service: 'authentik-outpost-external'
    ddb-importer:
      entrypoints:
        - 'https'
      rule: 'Host(`ddb-importer.local.michaelcook.dev`)'
      middlewares:
        - 'default-headers'
        - 'https-redirect'
      tls: {}
      service: 'ddb-importer'
    gateway:
      entrypoints:
        - 'https'
      rule: 'Host(`gateway.local.michaelcook.dev`)'
      middlewares:
        - 'default-headers'
        - 'https-redirect'
      tls: {}
      service: 'gateway'
    authentik:
      entrypoints:
        - 'https'
      rule: 'Host(`authentik.local.michaelcook.dev`)'
      middlewares:
        - 'default-headers'
        - 'https-redirect'
      tls: {}
      service: 'authentik'
    authentik-external:
      entrypoints:
        - 'https'
      rule: 'Host(`authentik.michaelcook.dev`)'
      middlewares:
        - 'default-headers'
        - 'https-redirect'
      tls: {}
      service: 'authentik'
    octoprint:
      entrypoints:
        - 'https'
      rule: 'Host(`octoprint.local.michaelcook.dev`)'
      middlewares:
        - 'default-headers'
        - 'https-redirect'
      tls: {}
      service: 'octoprint'
  services:
    proxmox:
      loadBalancer:
        servers:
          - url: 'https://192.168.1.100:8006'
        passHostHeader: true
    pihole-primary:
      loadBalancer:
        servers:
          - url: 'http://192.168.1.53:80'
        passHostHeader: true
    pihole-secondary:
      loadBalancer:
        servers:
          - url: 'http://192.168.1.254:80'
        passHostHeader: true
    portainer:
      loadBalancer:
        servers:
          - url: 'https://192.168.1.201:9443'
        passHostHeader: true
    foundry:
      loadBalancer:
        servers:
          - url: 'http://192.168.1.203:30000'
        passHostHeader: true
    ddb-importer:
      loadBalancer:
        servers:
          - url: 'http://192.168.1.203:30001'
        passHostHeader: true
    gateway:
      loadBalancer:
        servers:
          - url: 'https://192.168.1.1:443'
        passHostHeader: true
    authentik:
      loadBalancer:
        servers:
          - url: 'https://192.168.1.202:9443'
        passHostHeader: true
    authentik-outpost-external:
      loadBalancer:
        servers:
          - url: 'https://192.168.1.202:9443/outpost.goauthentik.io'
        passHostHeader: true
    octoprint:
      loadBalancer:
        servers:
          - url: 'http://192.168.1.203:8001'
        passHostHeader: true
  middlewares:
    pihole-addprefix:
      addPrefix:
        prefix: "/admin"

    pihole-redirectregex:
      redirectRegex:
        regex: '/admin/(.*)'
        replacement: '/'

    https-redirect:
      redirectScheme:
        scheme: 'https'

    default-headers:
      headers:
        frameDeny: true
        browserXssFilter: true
        contentTypeNoSniff: true
        forceSTSHeader: true
        stsIncludeSubdomains: true
        stsPreload: true
        stsSeconds: 15552000
        customFrameOptionsValue: 'SAMEORIGIN'
        customRequestHeaders: 
          X-Forwarded-Proto: 'https'
    
    authentik-external:
      forwardAuth:
        address: 'http://192.168.1.202:9000/outpost.goauthentik.io/auth/traefik'
        trustForwardHeader: true
        authResponseHeaders:
          - 'X-authentik-username'
          - 'X-authentik-groups'
          - 'X-authentik-email'
          - 'X-authentik-name'
          - 'X-authentik-uid'
          - 'X-authentik-jwt'
          - 'X-authentik-meta-jwks'
          - 'X-authentik-meta-outpost'
          - 'X-authentik-meta-provider'
          - 'X-authentik-meta-app'
          - 'X-authentik-meta-version'

    default-whitelist:
      ipWhiteList:
        sourceRange:
          - '192.168.0.0/16'

    secured:
      chain:
        middlewares:
          - 'default-whitelist'
          - 'default-headers'
